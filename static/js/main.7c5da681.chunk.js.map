{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","props","Movie","id","year","title","summary","poster","genres","to","pathname","state","className","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAKeA,MAHf,SAAeC,GACb,OAAO,oD,gFC2CMC,MAzCf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaP,GACrBQ,MAAO,CACLP,OACAC,QACAC,UACAC,SACAC,WARN,SAYE,sBAAKI,UAAU,QAAf,UACE,qBAAKC,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,sBAAKO,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BP,IAC9B,oBAAIO,UAAU,cAAd,SAA6BR,IAC7B,oBAAIQ,UAAU,gBAAd,SACGJ,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SACGI,GADMC,QAKb,mBAAGL,UAAU,iBAAb,SAA+BN,EAAQY,MAAM,EAAG,gBC4B3CC,G,kNArDbR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAMZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IATzB,2C,kEAaVQ,KAAKN,c,+BAOG,IAAD,EACuBM,KAAKjB,MAA3BS,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,yBAAST,UAAU,YAAnB,SACGQ,EACC,qBAAKR,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGS,EAAON,KAAI,SAACc,GAAD,OACV,cAAC,EAAD,CAEE1B,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,QANTqB,EAAM1B,e,GAtCR4B,IAAMC,YCeVC,E,kLAjBQ,IAAD,EACYL,KAAK3B,MAA3BiC,EADU,EACVA,SAAUC,EADA,EACAA,aACKC,IAAnBF,EAASvB,OACXwB,EAAQE,KAAK,O,+BAIP,IACAH,EAAaN,KAAK3B,MAAlBiC,SACR,YAAuBE,IAAnBF,EAASvB,MACJ,KAEA,6BAAKuB,EAASvB,MAAMN,Y,GAbZ0B,IAAMC,W,MCSZM,MARf,WACE,OACE,sBAAK1B,UAAU,MAAf,UACE,cAAC,IAAD,CAAMH,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCYS8B,MAbf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWvB,IACxC,cAAC,IAAD,CAAOqB,KAAK,SAASE,UAAW1C,IAChC,cAAC,IAAD,CAAOwC,KAAK,aAAaE,UAAWT,QCR1CU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7c5da681.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction About(props) {\n  return <h1>Hi Its About Page</h1>;\n}\nexport default About;\n","import React from \"react\";\nimport PropType from \"prop-types\";\nimport \"./Movie.css\";\nimport { Link } from \"react-router-dom\";\n/*className은 랜더링 이후 class 라고 바뀝니다.*/\nfunction Movie({ id, year, title, summary, poster, genres }) {\n  return (\n    <Link\n      to={{\n        pathname: `./movie/${id}`,\n        state: {\n          year,\n          title,\n          summary,\n          poster,\n          genres,\n        },\n      }}\n    >\n      <div className=\"movie\">\n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n          <h3 className=\"movie__title\">{title}</h3>\n          <h5 className=\"movie__year\">{year}</h5>\n          <ul className=\"movie__genres\">\n            {genres.map((genre, index) => (\n              <li key={index} className=\"genres__genre\">\n                {genre}\n              </li>\n            ))}\n          </ul>\n          <p className=\"movie__summary\">{summary.slice(0, 180)}</p>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nMovie.propTypes = {\n  id: PropType.number.isRequired,\n  year: PropType.number.isRequired,\n  title: PropType.string.isRequired,\n  summary: PropType.string.isRequired,\n  poster: PropType.string.isRequired,\n  genres: PropType.arrayOf(PropType.string).isRequired,\n};\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n  //state를 가지기 위해서 더이상 class component가 필요하지 않습니다 -> React Hook\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    // this.setState({movies : movies , isLoading : false})\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  /*\n      axios : fetch 위에 있는 작은 layer\n      npm install axios\n      */\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nclass Detail extends React.Component {\n  componentDidMount() {\n    const { location, history } = this.props;\n    if (location.state === undefined) {\n      history.push(\"/\");\n    }\n  }\n\n  render() {\n    const { location } = this.props;\n    if (location.state === undefined) {\n      return null;\n    } else {\n      return <h1>{location.state.title}</h1>;\n    }\n  }\n}\n\nexport default Detail;\n//class component 에서는 props 를 인자로 받을 필요 없이 this.props에 모두 저장됩니다.\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\nfunction Navigation() {\n  return (\n    <div className=\"nav\">\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/about\">About</Link>\n    </div>\n  );\n}\nexport default Navigation;\n/*\n페이지가 리로딩 되면 React component 들은 kill 되고 다시 create 됩니다.\n-> a 태그를 이용한 페이지 이동은 페이지를 리로딩 시킵니다.\n-> 설정한 Route와 연결이 되지 않습니다.\n-> a 태그 대신 router dom 의 Link component를 이용합니다.\n-> Linker 는 반드시 Router 안에서 실행되어야 합니다.*/\n","import React from \"react\";\nimport { BrowserRouter, HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n/*라우트가 url을 가져와 비교할 때 '완전 일치 비교'가 아닌 '포함 여부 비교' 이기 때문에\n '/' 라고 path를 지정하면 모든 path에 해당 컴포넌트가 추가 된다.\n 따라서 '일치비교'를 하기 위해선 속성으로 exact = {true} 를 추가해야 한다.*/\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// Render  함수로  Component를 생성 JSX 개념 !! 자바스크립트와 HMTL 의 결합\n//Render 함수에는 하나의 Component만 넣을 수 있습니다.\n//아래와 같이 render함수를 한번 더 호출하는 방법도 있지만 App.js 에 추가하는 방법도 있습니다.\n// ReactDOM.render(<React.StrictMode><Potato/></React.StrictMode>,document.getElementById('potato'));\n//react application 은 한번에 하나의 component만 rendering 할 수 있다\n\n// JSX -> component에 정보를 보낼 수 있습니다.\n"],"sourceRoot":""}