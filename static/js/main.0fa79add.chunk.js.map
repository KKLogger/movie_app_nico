{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAiCeA,MA7Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAE7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACJ,EAAQK,GAAT,OACV,oBAAgBJ,UAAU,gBAA1B,SACGD,GADMK,QAKb,mBAAGJ,UAAU,iBAAb,SAA+BH,EAAQQ,MAAM,EAAG,cCuCzCC,G,kNApDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAMZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IATzB,2C,kEAaVQ,KAAKN,c,+BAOG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,yBAAST,UAAU,YAAnB,SACGQ,EACC,qBAAKR,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGS,EAAON,KAAI,SAACc,GAAD,OACV,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVvB,KAAMsB,EAAMtB,KACZC,MAAOqB,EAAMrB,MACbC,QAASoB,EAAMpB,QACfC,OAAQmB,EAAME,mBACdpB,OAAQkB,EAAMlB,QANTkB,EAAMC,e,GArCTE,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0fa79add.chunk.js","sourcesContent":["import React from \"react\";\nimport PropType from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ year, title, summary, poster, genres }) {\n  /*className은 랜더링 이후 class 라고 바뀝니다.*/\n  return (\n    <div className=\"moive\">\n      <img src={poster} alt={title} title={title} />\n      <div className=\"movie__data\">\n        <h3 className=\"movie__title\">{title}</h3>\n        <h5 className=\"movie__year\">{year}</h5>\n        <ul className=\"movie__genres\">\n          {genres.map((genres, index) => (\n            <li key={index} className=\"genres__genre\">\n              {genres}\n            </li>\n          ))}\n        </ul>\n        <p className=\"movie__summary\">{summary.slice(0, 180)}</p>\n      </div>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropType.number.isRequired,\n  year: PropType.number.isRequired,\n  title: PropType.string.isRequired,\n  summary: PropType.string.isRequired,\n  poster: PropType.string.isRequired,\n  genres: PropType.arrayOf(PropType.string).isRequired,\n};\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    // this.setState({movies : movies , isLoading : false})\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  /*\n    axios : fetch 위에 있는 작은 layer\n    npm install axios\n    */\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Food from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Food />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Render  함수로  Component를 생성 JSX 개념 !! 자바스크립트와 HMTL 의 결합\n//Render 함수에는 하나의 Component만 넣을 수 있습니다.\n//아래와 같이 render함수를 한번 더 호출하는 방법도 있지만 App.js 에 추가하는 방법도 있습니다.\n// ReactDOM.render(<React.StrictMode><Potato/></React.StrictMode>,document.getElementById('potato'));\n//react application 은 한번에 하나의 component만 rendering 할 수 있다\n\n\n// JSX -> component에 정보를 보낼 수 있습니다."],"sourceRoot":""}